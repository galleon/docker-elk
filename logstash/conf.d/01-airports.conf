# 1. INPUT SECTION
# CSV file path supplied
input {
  file {
    path => ["/tmp/airports3.csv"]
    sincedb_path => "/dev/null"     
    start_position => "beginning"
  }
}

# 2. FILTER SECTION
#The purpose of filter is 
filter { 
  csv {
    separator => ','
    columns => ["name", "lat", "lon", "alt", "city", "icao", "iata"]
  }

# To  SKIP header row in CSV
 if [name] == "name" {
  drop {}
}

# Validation Checks for target visualizations  
  if [icao] !~ /.+/ {
    drop {}
  }

  if [lat] !~ /.+/ {
    drop {}
  }

  if [lon] !~ /.+/ {
    drop {}
  }

# Creating additional field lonlat as type - geoPoint for possible future use.
 if [lat] and [lon] {
   mutate {
        rename => [ "lon", "[location][lon]", "lat" , "[location][lat]" ]
        add_field => { "lonlat" => [ "%{[location][lon]}", "%{[location][lat]}" ] }
        convert => [ "[lonlat]", "float" ]
        remove_field => [ "location" ]
   }
 }
  
# Mutate-convert is to modify the datatype of the field
  mutate {
    convert => { "lat" => "float" }
    convert => { "lon" => "float" }
    convert => { "alt" => "integer" }
  }
}

#3. OUTPUT SECTION
output {
  # inserting document into elastic under index name=gequest.
  elasticsearch_http {
    host => "localhost"
    document_id => "%{icao}"
    index => "gequest"
    index_type => "airports"
  }
 
  # Saving the extracted events into another CSV file
  csv {
    path => "flights_airport.csv"
    fields => ["name", "alt", "city", "icao", "iata", "lonlat"]
  }
}
